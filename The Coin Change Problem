public class Solution{
	
	public static long coinChange(int[] coin, int m, int n)
	{
		long[][] table = new long[n+1][m];
		
		for (int i = 0; i < m; i++) 
			table[0][i] = 1;
		
		for (int i = 1; i < n+1; i++) {
			for (int j = 0; j < m; j++) {
				// including coin jth
				long x = 0, y=0;
				if( i - coin[j] >= 0)
					x = table[i-coin[j]][j];
				// not including mth coin
				if( i -1 >= 0 && j-1 >= 0)
					y = table[i][j-1];
				table[i][j] = x + y;
			}
		}
		
		return table[n][m-1];
	}
	
	public static void main(String[] args)
	{
		Scanner in = new Scanner(System.in);
		String string = in.nextLine();
		String[] str = string.split(" ");
		int n = Integer.parseInt(str[0]);
		int m = Integer.parseInt(str[1]);
		int[] coin = new int[m];
		string = in.nextLine();
		str = string.split(" ");
		for (int i = 0; i < coin.length; i++)
			coin[i] = Integer.parseInt(str[i]);
		System.out.println(coinChange(coin, m, n));
	}
}
